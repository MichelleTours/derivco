// <auto-generated />
using System;
using Derivco.Casino.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Derivco.Casino.Repositories.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231119184640_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Derivco.Casino.DomainModels.Roulette.Bet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasPayout")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Option")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PayoutValue")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoundCorrelationId")
                        .HasColumnType("TEXT");

                    b.Property<long>("RoundId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("Derivco.Casino.DomainModels.Roulette.BetPayoutMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BetOption")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Multiplier")
                        .HasColumnType("TEXT");

                    b.Property<int>("SpinValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PayoutMaps");
                });

            modelBuilder.Entity("Derivco.Casino.DomainModels.Roulette.Round", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateBetsPlaced")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateOfPayout")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateStarted")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateWheelSpin")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsInPlay")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpinValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Derivco.Casino.DomainModels.Roulette.Bet", b =>
                {
                    b.HasOne("Derivco.Casino.DomainModels.Roulette.Round", "Round")
                        .WithMany("PlacedBets")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Round");
                });

            modelBuilder.Entity("Derivco.Casino.DomainModels.Roulette.Round", b =>
                {
                    b.Navigation("PlacedBets");
                });
#pragma warning restore 612, 618
        }
    }
}
